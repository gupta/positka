{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "functionHostingPlanType": {
            "type": "string",
            "defaultValue": "Consumption",
            "allowedValues": [
                "Consumption",
                "Premium"
            ],
            "metadata": {
                "description": "Hosting plan for storing and executing the function application, billed accordingly. Consumption bills according to https://azure.microsoft.com/en-gb/pricing/details/functions/."
            }
        },
        "premiumHostingInstanceSize": {
            "type": "string",
            "allowedValues": [
                "EP1",
                "EP2",
                "EP3"
            ],
            "defaultValue": "EP1",
            "metadata": {
                "description": "https://docs.microsoft.com/en-us/azure/azure-functions/functions-scale"
            }
        },
        "nsgSourceAccount": {
            "type": "string",
            "defaultValue": "DefaultEndpointsProtocol=https;AccountName=storagefornsg;AccountKey=b/fInew0KaExrlekHXO/IRhmT/dQaYhau9hSJ6BTaVC0q3It73fgGLatG9AdyxMASDzZyLqSqHa1OkSuYncjFA==;EndpointSuffix=core.windows.net",
            "metadata": {
                "description": "Mandatory storage account connection string for NSG flow log data."
            }
        },
        "splunkHecAddress": {
            "type": "string",
            "defaultValue": "http://0efb1213.ngrok.io/services/collector/event",
            "metadata": {
                "description": "The IP or DNS address of Splunk HEC port. Format: http//IP_ADDRESS/services/2collector/event"
            }
        },
        "splunkHecToken": {
            "type": "string",
            "defaultValue": "d96a8556-5116-49d6-88fb-880f9ea38b41",
            "metadata": {
                "description": "The authentication token for the Splunk HEC port."
            }
        }
    },
    "variables": {
        "functionAppName": "NsgToSplunk",
        "hostingPlanName": "[concat('NsgSplunk-Hp-',  take(uniqueString(subscription().subscriptionId),5), take(uniqueString(resourceGroup().id),5))]",
        "storageAccountName": "[concat('nsgsplunk',  take(uniqueString(subscription().subscriptionId),7), take(uniqueString(resourceGroup().id),7))]",
        "appInsightsName": "[concat('NsgSplunk-Ins-',  take(uniqueString(subscription().subscriptionId),5), take(uniqueString(resourceGroup().id),5))]",
        "storageAccountid": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",        
        "packageURL": "[concat('https://zipdeploy.blob.core.windows.net/functions/',  subscription().subscriptionId, '/', resourceGroup().name, '/FuncNsgBlobCapture.zip')]",
        "varApplicationName": "NsgToSplunk",
        "varVendor": "Drona Labs Inc."
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccountName')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "tags": {
                "ApplicationName": "[variables('varApplicationName')]",
                "Vendor": "[variables('varVendor')]"
            },
            "properties": {
                "accountType": "Standard_LRS"
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2018-02-01",
            "name": "[variables('hostingPlanName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "ApplicationName": "[variables('varApplicationName')]",
                "Vendor": "[variables('varVendor')]"
            },
            "properties": {
                "name": "[variables('hostingPlanName')]",
                "condition": "[equals(parameters('functionHostingPlanType'), 'Consumption')]",
                "computeMode": "Dynamic"
            },
            "sku": {
                "name": "[if(equals(parameters('functionHostingPlanType'), 'Consumption'), 'Y1', parameters('premiumHostingInstanceSize')) ]",
                "tier": "[if(equals(parameters('functionHostingPlanType'), 'Consumption'), 'Dynamic', 'ElasticPremium') ]"
            }
        },
        {
            "apiVersion": "2014-04-01",
            "name": "[variables('appInsightsName')]",
            "type": "Microsoft.Insights/components",
            "location": "[resourceGroup().location]",
            "tags": {
                "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('functionAppName'))]": "Resource",
                "displayName": "AppInsightsComponent",
                "ApplicationName": "[variables('varApplicationName')]",
                "Vendor": "[variables('varVendor')]"
            },
            "properties": {
                "applicationId": "[variables('appInsightsName')]"
            }
        },
        {
            "apiVersion": "2016-08-01",
            "type": "Microsoft.Web/sites",
            "name": "[variables('functionAppName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "ApplicationName": "[variables('varApplicationName')]",
                "Vendor": "[variables('varVendor')]"
            },
            "kind": "functionapp",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                "[resourceId('microsoft.insights/components/', variables('appInsightsName'))]"
            ],
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "AzureWebJobsDashboard",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[toLower(variables('functionAppName'))]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~2"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "dotnet"
                        },
                        {
                            "name": "nsgBlobContainerName",
                            "value": "insights-logs-networksecuritygroupflowevent"
                        },
                        {
                            "name": "nsgSourceAccount",
                            "value": "[parameters('nsgSourceAccount')]"
                        },
                        {
                            "name": "splunkHecAddress",
                            "value": "[parameters('splunkHecAddress')]"
                        },
                        {
                            "name": "splunkHecToken",
                            "value": "[parameters('splunkHecToken')]"
                        },
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(concat('microsoft.insights/components/', variables('appInsightsName'))).InstrumentationKey]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "name": "MSDeploy",
                    "type": "extensions",
                    "location": "[resourceGroup().location]",
                    "apiVersion": "2015-08-01",
                    "tags": {
                        "displayName": "webdeploy",
                        "ApplicationName": "[variables('varApplicationName')]",
                        "Vendor": "[variables('varVendor')]"
                    },
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/Sites', variables('functionAppName'))]"
                    ],
                    "properties": {
                        "packageUri": "[variables('packageURL')]",
                        "dbType": "None",
                        "connectionString": ""
                    }
                }
            ]
        }
    ]
}